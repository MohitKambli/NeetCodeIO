/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int pairSum(ListNode head) {
        ListNode dummy = new ListNode(0, head);
        ListNode fast = dummy, slow = dummy, temp = head;
        while(fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
        }
        ListNode q = slow.next;
        slow.next = null;

        ListNode p = null;
        while(q != null) {
            ListNode r = q.next;
            q.next = p;
            p = q;
            q = r;
        }

        int max = Integer.MIN_VALUE;
        while(temp != null && p != null) {
            max = Math.max(max, temp.val + p.val);
            temp = temp.next;
            p = p.next;
        }
        return max;
    }
}

class Solution {
    public String minWindow(String s, String t) {
        int m = s.length(), n = t.length();
        if(n > m)
            return "";
        Map<Character, Integer> map = new HashMap<>();
        for(char ch : t.toCharArray())
            map.put(ch, map.getOrDefault(ch, 0) + 1);
        int i = 0, j = 0, count = n, index = -1, minWindow = Integer.MAX_VALUE;
        while(j < m) {
            char chJ = s.charAt(j);
            if(map.containsKey(chJ) && map.get(chJ) > 0)
                count--;
            map.put(chJ, map.getOrDefault(chJ, 0) - 1);
            while(count == 0) {
                int window = j - i + 1;
                if(window < minWindow) {
                    minWindow = window;
                    index = i;
                }
                char chI = s.charAt(i);
                map.put(chI, map.getOrDefault(chI, 0) + 1);
                if(map.get(chI) > 0)
                    count++;
                i++;
            }
            j++;
        }
        return minWindow == Integer.MAX_VALUE ? "" : s.substring(index, index + minWindow);
    }
}
